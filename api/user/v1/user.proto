syntax = "proto3";

package user.v1;

import "common/v1/errors.proto";
import "media/v1/image.proto";

message User {
  common.v1.ErrorDetails error = 1;
  string id = 2;
  optional string given_name = 3;
  optional string family_name = 4;
  string email = 5;
  bool email_verified = 6;
  media.v1.Image avatar = 7;
}

message UserSession {
  common.v1.ErrorDetails error = 1;
  string token = 2;
  string expires_at = 3;
}

message GetUserByIdRequest { string id = 1; }

message GetUserByIdResponse { common.v1.ErrorDetails error = 1; User user = 2; }

message CreateUserRequest {
  common.v1.ErrorDetails error = 1;
  optional string given_name = 2;
  optional string family_name = 3;
  string email = 4;
}

message CreateUserResponse { common.v1.ErrorDetails error = 1; User user = 2; UserSession session = 3; }

message GetUserBySessionTokenRequest { string token = 1; }

message GetUserBySessionTokenResponse { common.v1.ErrorDetails error = 1; User user = 2; UserSession session = 3; }

message CreateLoginEmailRequest { string email = 1; }

message CreateLoginEmailResponse { common.v1.ErrorDetails error = 1; string status = 2; }

message LoginWithReferenceLinkRequest { string token = 1; }

message LoginWithReferenceLinkResponse { common.v1.ErrorDetails error = 1; User user = 2; UserSession session = 3; }

message InviteUserRequest { string email = 1; }

message InviteUserResponse { common.v1.ErrorDetails error = 1; string status = 2; }

message AcceptInviteReferenceLinkRequest { string token = 1;  }

message AcceptInviteReferenceLinkResponse { common.v1.ErrorDetails error = 1; User user = 2; UserSession session = 3; }

service UserService {
  rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse) {}
  rpc GetUserBySessionToken(GetUserBySessionTokenRequest)
      returns (GetUserBySessionTokenResponse) {}
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  rpc CreateLoginEmail(CreateLoginEmailRequest) returns (CreateLoginEmailResponse) {}
  rpc LoginWithReferenceLink(LoginWithReferenceLinkRequest) returns (LoginWithReferenceLinkResponse) {}
  rpc InviteUser(InviteUserRequest) returns (InviteUserResponse) {}
  rpc AcceptInviteReferenceLink(AcceptInviteReferenceLinkRequest) returns (AcceptInviteReferenceLinkResponse) {}
}